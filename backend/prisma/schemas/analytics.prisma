// =============================================
// ANALYTICS SYSTEM MODELS
// =============================================

// Site Analytics
model SiteAnalytics {
  id              String   @id @default(cuid())
  date            DateTime @db.Date
  pageViews       Int      @default(0)
  uniqueVisitors  Int      @default(0)
  sessions        Int      @default(0)
  bounceRate      Float    @default(0)
  avgSessionTime  Int      @default(0) // in seconds
  newVisitors     Int      @default(0)
  returningVisitors Int    @default(0)
  conversionRate  Float    @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([date])
  @@map("site_analytics")
}

// Page Views tracking
model PageView {
  id          String   @id @default(cuid())
  path        String
  title       String?
  referrer    String?
  userAgent   String?
  ipAddress   String?
  country     String?
  city        String?
  device      String?
  browser     String?
  os          String?
  sessionId   String?
  userId      String?
  duration    Int?     // time spent on page in seconds
  timestamp   DateTime @default(now())

  user        User?    @relation("UserPageViews", fields: [userId], references: [id], onDelete: SetNull)

  @@index([path])
  @@index([timestamp])
  @@index([userId])
  @@map("page_views")
}

// Analytics Sessions
model AnalyticsSession {
  id          String   @id @default(cuid())
  sessionId   String   @unique
  userId      String?
  startTime   DateTime @default(now())
  endTime     DateTime?
  duration    Int?     // in seconds
  pageViews   Int      @default(0)
  isActive    Boolean  @default(true)
  referrer    String?
  landingPage String?
  exitPage    String?
  device      String?
  browser     String?
  os          String?
  country     String?
  city        String?
  ipAddress   String?

  user        User?    @relation("UserAnalyticsSessions", fields: [userId], references: [id], onDelete: SetNull)

  @@index([sessionId])
  @@index([userId])
  @@index([startTime])
  @@map("analytics_sessions")
}

// Content Analytics
model ContentAnalytics {
  id            String   @id @default(cuid())
  contentId     String
  contentType   String   // post, page, category, etc.
  date          DateTime @db.Date
  views         Int      @default(0)
  uniqueViews   Int      @default(0)
  likes         Int      @default(0)
  shares        Int      @default(0)
  comments      Int      @default(0)
  avgTimeOnPage Int      @default(0) // in seconds
  bounceRate    Float    @default(0)
  exitRate      Float    @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([contentId, contentType, date])
  @@index([contentType])
  @@index([date])
  @@map("content_analytics")
}

// User Analytics
model UserAnalytics {
  id              String   @id @default(cuid())
  userId          String
  date            DateTime @db.Date
  sessionsCount   Int      @default(0)
  pageViews       Int      @default(0)
  timeSpent       Int      @default(0) // in seconds
  actionsCount    Int      @default(0)
  postsCreated    Int      @default(0)
  postsUpdated    Int      @default(0)
  commentsPosted  Int      @default(0)
  likesGiven      Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation("UserAnalyticsData", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date])
  @@index([date])
  @@map("user_analytics")
}

// Analytics Events
model AnalyticsEvent {
  id          String   @id @default(cuid())
  eventName   String
  category    String
  action      String
  label       String?
  value       Int?
  userId      String?
  sessionId   String?
  path        String?
  properties  Json?    // Additional event properties
  timestamp   DateTime @default(now())

  user        User?    @relation("UserAnalyticsEvents", fields: [userId], references: [id], onDelete: SetNull)

  @@index([eventName])
  @@index([category])
  @@index([userId])
  @@index([sessionId])
  @@index([timestamp])
  @@map("analytics_events")
}

// Reports
model Report {
  id          String    @id @default(cuid())
  name        String
  description String?
  type        String    // dashboard, content, user, custom
  config      Json      // Report configuration
  schedule    String?   // Cron expression for scheduled reports
  isActive    Boolean   @default(true)
  createdBy   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  creator     User      @relation("CreatedReports", fields: [createdBy], references: [id], onDelete: Cascade)
  executions  ReportExecution[]

  @@index([type])
  @@index([createdBy])
  @@map("reports")
}

// Report Executions
model ReportExecution {
  id          String    @id @default(cuid())
  reportId    String
  status      String    // pending, running, completed, failed
  startTime   DateTime  @default(now())
  endTime     DateTime?
  result      Json?     // Report result data
  error       String?   // Error message if failed
  executedBy  String?   // User who triggered execution

  report      Report    @relation(fields: [reportId], references: [id], onDelete: Cascade)
  executor    User?     @relation("ExecutedReports", fields: [executedBy], references: [id], onDelete: SetNull)

  @@index([reportId])
  @@index([status])
  @@index([startTime])
  @@map("report_executions")
}

// Legacy Analytics model (keeping for backward compatibility)
model Analytics {
  id        String   @id @default(cuid())
  path      String
  views     Int      @default(0)
  date      DateTime @db.Date
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([path, date])
  @@map("analytics")
}
